{"version":3,"sources":["fbase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Tweet.js","components/TweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","refreshUser","userObj","history","useHistory","useState","displayName","newDisplayName","setNewDisplayName","onSubmit","event","a","preventDefault","updateProfile","className","type","autoFocus","onChange","value","target","placeholder","style","marginTop","onClick","signOut","push","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","console","log","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","message","required","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","marginBottom","faGoogle","faGithub","Tweet","tweetObj","isOwner","editing","setEditing","text","newTweet","setNewTweet","onDeleteClick","ok","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","faTrash","faPencilAlt","TweetFactoy","tweet","setTweet","attachment","setAttachment","fileRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","htmlFor","faPlus","accept","files","theFile","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","tweets","setTweets","useEffect","orderBy","onSnapshot","snapshot","tweetArray","docs","map","TweetFactory","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6bfbd4e3.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID ,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService, dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick =() =>{\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName){\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n    };\r\n    return(\r\n    <div className=\"container\">\r\n        <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input type=\"text\" autoFocus onChange={onChange} className=\"formInput\" placeholder=\"Display name\" value={newDisplayName}/>\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n    </form>\r\n    <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n    )\r\n}","import React , { useState }  from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n          target: { name, value },\r\n        } = event;\r\n        console.log(value);\r\n        if (name === \"email\") {\r\n          setEmail(value);\r\n        } else if (name === \"password\") {\r\n          setPassword(value);\r\n        }\r\n      };\r\n      const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try{\r\n          let data;\r\n        if(newAccount){\r\n            //create account\r\n          data = await authService.createUserWithEmailAndPassword(email, password);\r\n        }else{\r\n            // log in\r\n          data = await authService.signInWithEmailAndPassword(email, password);\r\n        }\r\n        console.log(data)}\r\n       catch(error){\r\n          setError(\"error : \"+error.message);\r\n          }\r\n      };\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    return(\r\n        <>\r\n        <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input type=\"submit\" className=\"authInput authSubmit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">{newAccount ? \"Log in\" : \"Create Account\"} </span>\r\n    </>)\r\n};\r\n\r\nexport default AuthForm;","import React from \"react\";\r\nimport { authService, firebaseInstance} from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async(event) => {\r\n        const {\r\n            target: {name},\r\n        } = event;\r\n        let provider;\r\n        if(name === \"google\"){\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        }else if(name === \"github\"){\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        await authService.signInWithPopup(provider);\r\n    };\r\n    return (\r\n      <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm/>\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n          </button>\r\n          <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  export default Auth;","import React,{useState} from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Tweet = ({tweetObj , isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newTweet, setNewTweet] = useState(tweetObj.text);\r\n     const onDeleteClick = async() => {\r\n         const ok = window.confirm(\"Are you sure you want to delete this tweet?\");\r\n         console.log(ok);\r\n         if(ok){\r\n            await dbService.doc(`tweets/${tweetObj.id}`).delete();\r\n            await storageService.refFromURL(tweetObj.attachmentUrl).delete();      \r\n//            tweetObj.tweet.delete(tweetObj.tweet.userObj);\r\n         }\r\n    };\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onSubmit = async (event) => {  \r\n        console.log(newTweet);\r\n        event.preventDefault();\r\n        await dbService.doc(`tweets/${tweetObj.id}`).update({\r\n          text: newTweet,\r\n        });\r\n        setEditing(false);\r\n    }\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n        setNewTweet(value);\r\n    }\r\n    return(\r\n    <div className=\"tweet\">{\r\n        editing ? (\r\n        <>\r\n        {isOwner && (\r\n        <>\r\n        <form onSubmit={onSubmit} className=\"container tweetEdit\">\r\n            <input type=\"text\" placeholder={tweetObj.text} autoFocus value={newTweet} className=\"formInput\" required onChange={onChange}/>\r\n            <input type=\"submit\" value=\"Update Tweet\"  onSubmit={onSubmit} className=\"formBtn\" />\r\n        </form>\r\n        <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n        </>\r\n        )}\r\n        </>\r\n        ) : (\r\n            <>\r\n              <h4>{tweetObj.text}</h4>\r\n              {tweetObj.attachmentUrl && <img src={tweetObj.attachmentUrl} />}\r\n              {isOwner && (\r\n            <div className=\"tweet__actions\">\r\n            <span onClick={onDeleteClick}>\r\n              <FontAwesomeIcon icon={faTrash} />\r\n            </span>\r\n            <span onClick={toggleEditing}>\r\n              <FontAwesomeIcon icon={faPencilAlt} />\r\n            </span>\r\n          </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      );\r\n    };\r\n    export default Tweet;","import React,{useState} from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst TweetFactoy = ({userObj}) => {\r\n    const [tweet, setTweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        if (tweet === \"\") {\r\n            return;\r\n          }\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if( attachment !== \"\"){\r\n        const fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n        const response = await fileRef.putString(attachment, \"data_url\");\r\n        attachmentUrl = await response.ref.getDownloadURL();\r\n    };\r\n        const tweetObj = {\r\n            text : tweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,//creatorId      \r\n            attachmentUrl      \r\n        };\r\n        await dbService.collection(\"tweets\").add(tweetObj);\r\n        setTweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    \r\n    const onChange = (event) => {\r\n        const{\r\n            target:{value}\r\n        } = event;\r\n        setTweet(value);\r\n    };\r\n    const onFileChange = (event) => {\r\n        console.log(event.target.files);\r\n        const {\r\n            target: {files},\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        }\r\n        reader.readAsDataURL(theFile);\r\n    }\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n    return(\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n        <div className=\"factoryInput__container\">\r\n          <input\r\n            className=\"factoryInput__input\"\r\n            value={tweet}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"What's on your mind?\"\r\n            maxLength={120}\r\n          />\r\n          <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n        </div>\r\n        <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n          <span>Add photos</span>\r\n          <FontAwesomeIcon icon={faPlus} />\r\n        </label>\r\n        <input         \r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n        { attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n        <img\r\n          src={attachment}\r\n          style={{\r\n            backgroundImage: attachment,\r\n          }}\r\n        />\r\n        <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n          <span>Remove</span>\r\n          <FontAwesomeIcon icon={faTimes} />\r\n        </div>\r\n        </div>\r\n        )}\r\n        </form>\r\n    )\r\n};\r\nexport default TweetFactoy;","import React, {useEffect, useState} from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport Tweet from \"components/Tweet\";\r\nimport TweetFactory from \"components/TweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [tweets, setTweets] = useState([]);\r\n    useEffect(() => {\r\n        dbService.collection(\"tweets\").orderBy(\"createdAt\",\"desc\").onSnapshot(snapshot =>{\r\n            const tweetArray = snapshot.docs.map(doc => ({\r\n                id:doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            setTweets(tweetArray);\r\n        })\r\n    }, []);\r\n    return(\r\n    <div className=\"container\">\r\n        <TweetFactory userObj={userObj} />\r\n        <div style={{ marginTop: 30 }}>\r\n            {tweets.map((tweet) => (\r\n                 <Tweet key={tweet.id} tweetObj={tweet} isOwner={tweet.creatorId === userObj.uid}> </Tweet> \r\n            )\r\n            )}\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\nexport default Home;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ( {userObj} ) =>\r\n    <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n    <li>\r\n    <Link to=\"/\" style={{ marginRight: 10 }}>\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n    </Link>\r\n    </li>\r\n    <li>\r\n    <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            { userObj.displayName\r\n              ? `${userObj.displayName}의 Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n    </li>\r\n    </ul>\r\n</nav>\r\nexport default Navigation;","import React from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Profile from \"routes/Profile\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n    return (\r\n      <Router>\r\n        {isLoggedIn && <Navigation userObj={userObj} />}\r\n        <Switch>\r\n          {isLoggedIn ? (\r\n            <>\r\n          <div\r\n          style={{\r\n            maxWidth: 890,\r\n            width: \"100%\",\r\n            margin: \"0 auto\",\r\n            marginTop: 80,\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n          }}\r\n          >               \r\n            <Route exact path=\"/\">\r\n                <Home userObj={userObj} />\r\n              </Route>\r\n              <Route exact path=\"/profile\">\r\n                <Profile userObj={userObj} refreshUser={refreshUser} />\r\n              </Route>\r\n            </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Route exact path=\"/\">\r\n                <Auth />\r\n              </Route>\r\n            </>\r\n          )}\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  };\r\n  export default AppRouter;","import React,{useEffect, useState} from \"react\";\nimport  AppRouter  from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n      authService.onAuthStateChanged((user) => {\n        if(user){\n          setIsLoggedIn(true);\n          setUserObj({\n            displayName:user.displayName,\n            uid:user.uid,\n            updateProfile: (args) => user.updateProfile(args),\n          });\n        }else{\n          setIsLoggedIn(false);\n        }\n        setInit(true);\n      });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName:user.displayName,\n      uid:user.uid,\n      updateProfile: (args) => user.updateProfile(args)\n    })\n  }\n  return (\n  <>\n  {init ? <AppRouter isLoggedIn={isLoggedIn} userObj={userObj} refreshUser={refreshUser}/> : \"Initializing...\"}\n   </> \n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./styles.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}